I"T<p>The rest operator actually uses the same syntax as the spread operator: <code class="highlight__code">...</code>. It’s usage determines whether you’re using it as the spread or rest operator.</p>

<h2 id="refresher-on-the-spread-operator">Refresher on the Spread operator</h2>

<p>The spread operator allows you to pull elements out of an array (split the array into a list of its elements) or pull the properties and values out of an object.</p>

<p class="highlight__file-desc">Here's the spread operator used on an array:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">const</span> <span class="nx">oldArray</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
  <span class="kd">const</span> <span class="nx">newArray</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">oldArray</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span> <span class="c1">// [1, 2, 3, 4, 5]; </span>
</code></pre></div></div>

<p class="highlight__file-desc">Here's the spread operator used on an object:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">const</span> <span class="nx">oldObject</span> <span class="o">=</span> <span class="p">{</span><span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Daniel</span><span class="dl">'</span><span class="p">};</span>
  <span class="kd">const</span> <span class="nx">newObject</span> <span class="o">=</span> <span class="p">{...</span><span class="nx">oldObject</span><span class="p">,</span> <span class="na">age</span><span class="p">:</span> <span class="mi">22</span><span class="p">};</span> <span class="c1">// {name: 'Daniel', age: 22} </span>
</code></pre></div></div>

<p>The spread operator is useful for cloning arrays and objects. Since both are stored by reference (a reference is created to the object/array in memory), copying them safely (i.e. not making another reference) can be tricky. With the spread operator you have an easy way of creating a clone of the object or array.</p>

<h2 id="using-the-rest-operator">Using the Rest Operator</h2>

<p>The Rest operator allows you to have an almost unlimited amount of arguments as an array.</p>

<p class="highlight__file-desc">Here's the rest operator used to turn arguments into an array:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">addAllNumbers</span><span class="p">(...</span><span class="nx">numbers</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">numbers</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">previousNumber</span><span class="p">,</span> <span class="nx">currentNumber</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">previousNumber</span> <span class="o">+</span> <span class="nx">currentNumber</span><span class="p">;</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">addAllNumbers</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">));</span> <span class="c1">// 15</span>
</code></pre></div></div>

<h2 id="conclusion">Conclusion</h2>

<p>Some might argure that the rest operator is not as useful as the spread operator, but it provides a nice way to turn arguments of a function into an array.</p>
:ET