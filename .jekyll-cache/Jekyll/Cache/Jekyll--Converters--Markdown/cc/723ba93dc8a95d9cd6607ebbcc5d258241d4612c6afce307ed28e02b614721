I"ª<p>A explanation of the concept dry, donâ€™t repeat yourself, in programming. It is important for your code to be dry because it will make it easier to read the next time you look at it.</p>

<h2 id="what-is-dry">what is DRY</h2>

<p>DRY stands for donâ€™t repeat yourself. This way of programming is really powerful because you will end up with maintainable and readable code.</p>

<h2 id="an-example-on-how-to-use-dry">an example on how to use DRY</h2>

<p>First I am going to show you without following the principles of DRY.</p>

<p>lets says we are making sandwiches and for every sandwiches we need 3 different variable declarations to store the different foods that will go on the sandwich. The variables will store the bread type, condiment, and type of meat.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">let</span> <span class="nx">bread</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">whole wheat</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">condiment</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">honey mustard</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">meat</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">turkey</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">let</span> <span class="nx">sandwich</span> <span class="o">=</span> <span class="nx">bread</span> <span class="o">+</span> <span class="nx">condiment</span> <span class="o">+</span> <span class="nx">meat</span> <span class="o">+</span> <span class="nx">bread</span><span class="p">;</span>

</code></pre></div></div>

<p>now lets say we want a different sandwich and want to keep the sandwich we made before, we will have to make new variables to store the different breads, condiments and meat.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">bread</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">whole wheat bread</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">condiment</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">honey mustard</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">meat</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">turkey</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">let</span> <span class="nx">bread2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">oat bread</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">condiment2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">mustard</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">meat2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ham</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">let</span> <span class="nx">sandwich</span> <span class="o">=</span> <span class="nx">bread</span> <span class="o">+</span> <span class="nx">condiment</span> <span class="o">+</span> <span class="nx">meat</span> <span class="o">+</span> <span class="nx">bread</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">sandwich2</span> <span class="o">=</span> <span class="nx">bread2</span> <span class="o">+</span> <span class="nx">condiment2</span> <span class="o">+</span> <span class="nx">meat2</span> <span class="o">+</span> <span class="nx">bread2</span><span class="p">;</span>
</code></pre></div></div>

<p>This is a bad idea because everytime we want a new sandwich we are going to make new variables to store all the items we need to make a sandwich. We could use a function and pass in the three different items as arguments for what we want on the sandwich. This way we wonâ€™t repeat the code but call the function whenever we want a new sandwich.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">// call this function whenever you want to make a new sandwich</span>
<span class="kd">function</span> <span class="nx">sandwich</span><span class="p">(</span><span class="nx">bread</span><span class="p">,</span> <span class="nx">condiment</span><span class="p">,</span> <span class="nx">meat</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">bread</span> <span class="o">+</span> <span class="nx">condiment</span> <span class="o">+</span> <span class="nx">meat</span> <span class="o">+</span> <span class="nx">breadType</span>
<span class="p">}</span>


<span class="c1">// now we give the function call the values we would of stored in the variables</span>
<span class="kd">let</span> <span class="nx">sandwich</span> <span class="o">=</span> <span class="nx">sandwich</span><span class="p">(</span><span class="dl">"</span><span class="s2">whole wheat bread</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">honey mustard</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">turkey</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">sandwich2</span> <span class="o">=</span> <span class="nx">sandwich</span><span class="p">(</span><span class="dl">"</span><span class="s2">oat bread</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">mustard</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">ham</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<p>This looks cleaner and is less code then before which makes it easier to read and maintain.</p>

<h2 id="the-concept">the concept</h2>

<p>the concept of donâ€™t repeat yourself is very simple if you ever find yourself writing the same code more than once think about how you could put it into a function and call that function instead of having to write the same code. This reduces bugs because you donâ€™t have to remember all the locations you have duplicated code because it will be in a function.</p>

<p>happy coding :)</p>
:ET