I",<p>Now that we know how to setup Git, lets see how we can track changes.</p>

<h2 id="goal">Goal</h2>

<p>Follow along to see how changes are tracked using Git.This blog is a continuation of the last one. <a href="https://codinglead.github.io/github/initializing-Git">If you haven’t read the last blog here’s a link to it</a>. In this blog we will practice tracking changes in our <em>friends</em> project directory. We will create a one-page website that will list our friends. The steps we follow will reflect the daily workflow you might see when using Git.</p>

<h2 id="create-files">Create Files</h2>
<p>We have our project directory created and our Git repository initialized. Now, we can create the HTML file that will list our friends. Let’s make an empty file in the command prompt in our project directory:</p>

<p class="highlight__file-desc">command prompt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">touch </span>index.html
</code></pre></div></div>

<p>Now, let’s open our project directory in your code editor of choice so that we can add some content to our empty HTML file. I like to use <a href="https://code.visualstudio.com/">Visual Studio code</a>.</p>

<p>Here is our project directory in Code with the empty file open.</p>

<p><img src="/images/init.png" alt="Photo of a file open with Visual Studio Code" title="Visual Studio Code file" /></p>

<p>Let’s add some starter html. Copy and paste this text into your index.html file:</p>

<p class="highlight__file-desc">friends/index.html</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span> Hello World <span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;h2&gt;</span> A program to list our friends. <span class="nt">&lt;/h2&gt;</span>

<span class="nt">&lt;p&gt;</span>This page is an attempt to list our friends.  We're interested to see how long our list can become.<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>We'll start with a few friends.<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;ul&gt;</span>
  <span class="nt">&lt;li&gt;</span>Angel<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Brian<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Christian<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>David<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Ricardo<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<p>We can view our HTML in the web browser by double-clicking on index.html.</p>

<p><img src="/images/index.png" alt="Photo of the friends list website" title="friends list website" /></p>

<h2 id="git-tracking">Git tracking</h2>

<p>Now, let’s see what Git has done with our changes by running the command <code class="code">git status</code>:</p>

<p class="highlight__file-desc">command prompt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git status
On branch master

No commits yet

Untracked files:
  <span class="o">(</span>use <span class="s2">"git add &lt;file&gt;..."</span> to include <span class="k">in </span>what will be committed<span class="o">)</span>

	index.html

nothing added to commit but untracked files present <span class="o">(</span>use <span class="s2">"git add"</span> to track<span class="o">)</span>

</code></pre></div></div>

<p>When we ask for the status, Git lets us know that there has been a new file added to our project directory but it is not being tracked because we haven’t yet added it to the files for Git to track. Let’s do this now using the command Git tells us to use: <code class="code">git add</code>.</p>

<p class="highlight__file-desc">command prompt</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git add index.html
</code></pre></div></div>

<p>Now when we run <code class="code">git status</code>, we see that adding our new file told Git that these are changes to start tracking. Git lets us know we have a new file that exists, but has not been committed.</p>

<p class="highlight__file-desc">command prompt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git status
On branch master

No commits yet

Changes to be committed:
  <span class="o">(</span>use <span class="s2">"git rm --cached &lt;file&gt;..."</span> to unstage<span class="o">)</span>

	new file:   index.html
</code></pre></div></div>

<h2 id="making-git-commits">Making Git commits</h2>

<p>A commit in Git is a way of saving changes to the permanent history of our project. Right now, our file is saved on our hard drive but it has not been committed to the historical log of the friends list website. When we make a commit, it is a snapshot of our work exactly as it exists at that moment. Let’s commit our work now to the project history</p>

<p>The command is <code class="code">git commit</code>:</p>

<p class="highlight__file-desc">command prompt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git commit <span class="nt">-m</span> <span class="s2">"add HTML file with a list of 5 friends"</span>
</code></pre></div></div>

<p>We use the <code class="code">git commit</code> command, followed by a short, but descriptive message in <code class="code code--red">" "</code> after the <code class="code code--blue">-m</code>. For consistency, the message should complete the sentence, <code class="code code--red">"This commit will…"</code>. So, when looking at our commit we know that this commit will <code class="code code--red">"add HTML file with a list of 5 friends"</code>.</p>

<p>Let’s look at our Git history now using the <code class="code">git log</code> command:</p>

<p class="highlight__file-desc">command prompt</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git log
commit c4bf9959bf7269d01be2c4aadb6b15fe951647d3 <span class="o">(</span>HEAD -&gt; master<span class="o">)</span>
Author: Daniel Munoz &lt;daniel.munozdev@gmail.com&gt;
Date:   Fri Oct 19 14:20:34 2018 <span class="nt">-0700</span>

    add HTML file with a list of 5 friends
</code></pre></div></div>

<p>Our initial commit has been assigned a unique identifier of numbers and letters, <code class="code code--blue">c4bf9959bf7269d01be2c4aadb6b15fe951647d3</code>. If we want to see our HTML file as it exists right now, we can return to this unique commit.</p>

<p>Let’s add more friends to our HTML file:</p>

<p class="highlight__file-desc">friends/index.html</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span> Hello World <span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;h2&gt;</span> A program to list our friends. <span class="nt">&lt;/h2&gt;</span>

<span class="nt">&lt;p&gt;</span>This page is an attempt to list our friends. We're interested to see how long our list can become.<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;ul&gt;</span>
  <span class="nt">&lt;li&gt;</span>Angel<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Brian<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Christian<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>David<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Jimmy<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Kite<span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;li&gt;</span>Ricardo<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<p>After we save our updates, let’s look at what our <code class="code">git status</code> displays:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git status
On branch master
Changes not staged <span class="k">for </span>commit:
  <span class="o">(</span>use <span class="s2">"git add &lt;file&gt;..."</span> to update what will be committed<span class="o">)</span>
  <span class="o">(</span>use <span class="s2">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="k">in </span>working directory<span class="o">)</span>

	modified:   index.html

no changes added to commit <span class="o">(</span>use <span class="s2">"git add"</span> and/or <span class="s2">"git commit -a"</span><span class="o">)</span>
</code></pre></div></div>

<p>It shows us that the <code class="code">index.html</code> file has been modified. If we would like to commit these changes to our project history, we can add and commit them now.</p>

<p>So, how do we know when we should make a commit? The phrase that many developers use to describe a good commit is a “logically separate change set”.</p>

<p>As you practice using Git, your own sense of when to commit will evolve as your coding becomes more and more advanced.</p>

<p>Since we added a couple of additional lines to our HTML and are going to stop working on this code for a while, let’s go ahead and add our file and commit our changes.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git add index.html
<span class="nv">$ </span>git commit <span class="nt">-m</span> <span class="s2">"add 2 friends"</span>
</code></pre></div></div>

<p>Here is our project’s history now:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git log
commit c8000c41131f64f56611c9cee9b09046d363f162 <span class="o">(</span>HEAD -&gt; master<span class="o">)</span>
Author: Daniel Munoz &lt;daniel.munozdev@gmail.com&gt;
Date:   Fri Oct 19 15:24:25 2018 <span class="nt">-0700</span>

    add 2 friends

commit c4bf9959bf7269d01be2c4aadb6b15fe951647d3
Author: Daniel Munoz &lt;daniel.munozdev@gmail.com&gt;
Date:   Fri Oct 19 14:20:34 2018 <span class="nt">-0700</span>

    add HTML file with a list of 5 friends

</code></pre></div></div>

<h2 id="conclusion">Conclusion</h2>

<p>As your project grows, we will be able to run <code class="code">git log</code> to see how it has evolved from the beginning to its current state by reading each of our commit messages. The log also tells us the dates and authors of the code that was committed.</p>

<p>This may seem like more details than we want for a simple friends list website, but as we go you will see how using Git will make working on more complex tasks or in collaboration with a bigger team incredibly powerful for keeping the code organized with each other and over time.</p>

<p>Let’s take a final look at our website to see our changes.</p>

<p><img src="/images/index-complete.png" alt="Photo of the friends list website" title="friends list website complete" /></p>

<p>Good job!</p>

:ET