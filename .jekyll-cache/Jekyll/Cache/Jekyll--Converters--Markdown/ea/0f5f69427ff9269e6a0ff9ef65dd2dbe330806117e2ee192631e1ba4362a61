I"¯<h2 id="what-is-map-on-a-array">What is map on a array</h2>

<p>The <span class="highlight__code">map()</span> method takes in a function expression as a argument. The <span class="highlight__code">map()</span> method calls the function on every element on the array it is called on. It does not change the original array instead it makes a copy and returns a new array.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">// original array</span>
<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span>

<span class="c1">// making a new array that takes in a function that just multiplies every element by 10</span>
<span class="kd">let</span> <span class="nx">newArr</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">number</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">number</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arr</span><span class="p">)</span> <span class="c1">// [3, 10, 40, 3]</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">newArr</span><span class="p">)</span> <span class="c1">// [10, 20, 30, 40, 100]</span>
</code></pre></div></div>

<p>When the <span class="highlight__code">map()</span> method gets invoked its callback gets 3 arguments</p>

<ul>
  <li>the value element</li>
  <li>the index of the element</li>
  <li>the original array being looped through</li>
</ul>

<h2 id="practical-uses-of-map-in-javascript">Practical uses of map in JavaScript</h2>

<h3 id="want-to-make-every-element-in-an-array-a-number">want to make every element in an array a number</h3>

<p>no es6</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">stringOfNumbers</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">1</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">2</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">3</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">4</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">5</span><span class="dl">"</span><span class="p">];</span>
<span class="kd">var</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="nx">stringOfNumbers</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">number</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">number</span><span class="p">)</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stringOfNumbers</span><span class="p">);</span> <span class="c1">// ["1", "2", "3", "4", "5"]</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// [1, 2, 3, 4, 5]</span>
</code></pre></div></div>

<p>with es6 using arrow function and let variable declaration</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">stringOfNumbers</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">1</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">2</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">3</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">4</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">5</span><span class="dl">"</span><span class="p">];</span>
<span class="kd">let</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="nx">stringOfNumbers</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">number</span> <span class="o">=&gt;</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">number</span><span class="p">))</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stringOfNumbers</span><span class="p">);</span> <span class="c1">// ["1", "2", "3", "4", "5"]</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">numbers</span><span class="p">);</span> <span class="c1">// [1, 2, 3, 4, 5]</span>
</code></pre></div></div>
<p>The arrow function allows the function to be shorten by not having to use curly brackets, parentheses for parameters, and no return keyword.</p>

<h2 id="the-power-of-map">The power of map</h2>

<p><span class="highlight__code">map()</span> is powerful when you are trying to do something to every element in an array.</p>

<p>the basics</p>

<p>A callback function is needed</p>

<ul>
  <li>calls the function on every element in the array</li>
  <li>have access to the current element, the index, and the original array being looped.</li>
  <li>makes and returns a new array, doesnâ€™t alter the original array.</li>
</ul>

<p>happy coding :)</p>
:ET