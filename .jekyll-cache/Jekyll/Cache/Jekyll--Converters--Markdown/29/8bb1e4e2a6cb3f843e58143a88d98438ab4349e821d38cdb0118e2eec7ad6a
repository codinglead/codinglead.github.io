I"<p>Everyone should know how to use a version control because it is important to be able to see your history of code you been working on.</p>

<p>Git is a very powerful and a common version control system.</p>

<h2 id="what-is-git">what is git</h2>

<p>It is a popular version control system</p>

<ul>
  <li>tracks changes between files, and creates commits which are checkpoints that you can revert to</li>
  <li>synchronize code between multiple people</li>
  <li>create alternate branches to store different versions of code</li>
</ul>

<h2 id="relevant-commands">relevant commands</h2>

<p>There is a lot of commands. Here are a few important commands that everyone should know.</p>

<h3 id="git-init">git init</h3>

<ul>
  <li>creates a git repository in your current directory</li>
  <li>creates .git/ folder in your working directory</li>
</ul>

<p>This is where everything is stored.</p>

<h3 id="git-clone-url">git clone [url]</h3>

<p>Copies a git repository located at url into a new directory in your working directory. Includes all files, history and branches.</p>

<p>A ‚Äúfork‚Äù on Github will create your own copy of a repository. (makes you the owner of a new copy)</p>

<h3 id="git-status">git status</h3>

<p>Shows current state of the repository. Displays changed files, added files, and removed files.</p>

<p>In simple terms it shows you the status of everything.</p>

<h3 id="git-add-path">git add [path]</h3>

<p>Tell Git to include all the files at a [path] in the next commit. If you modify the files after git-adding them, git will remember their initial state when you added them.</p>

<p>To cancel the git add use the git reset. which just undos git add.</p>

<h3 id="git-reset-path">git reset [path]</h3>

<ul>
  <li>undoes a git add</li>
  <li>remove files from the index</li>
</ul>

<h4 id="what-is-index">what is index</h4>
<p>Index is tracking the difference between the working directory and any commits you make. Index are things that are staged for next commit.</p>

<h3 id="git-reset-soft--hard-commit">git reset [‚Äìsoft | ‚Äìhard] [commit]</h3>

<p>restores state to a specific commit</p>

<p>‚Äì soft flag will not affect  files
‚Äì hard files will discard all changes</p>

<h3 id="git-commit--a--m-message">git commit [-a] [-m [message]]</h3>

<p>creates a new checkpoint in the project status along with a message. Stores the state of any added files.</p>

<p>Use the -a flag to automatically add all tracked files (files already know to git from previous git add commands)</p>

<p>Use -m flag to use the message as the commit message</p>

<h2 id="conclusion">conclusion</h2>

<p>Git is a very powerful tool to help you keep your files safe.</p>

<p>The commands every should know are‚Ä¶</p>

<ul>
  <li>git init</li>
  <li>git clone [url]</li>
  <li>git status</li>
  <li>git add [path]</li>
  <li>git reset [path]</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>git reset [soft</td>
          <td>hard ] [commit]</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>git commit [-a] [-m [message]]</li>
</ul>

<p>happy coding</p>
:ET